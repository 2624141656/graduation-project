<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>wlin</groupId>
    <artifactId>graduation-project</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>

    <modules>
        <module>basic</module>
        <module>build-tools</module>
    </modules>

    <properties>

        <!-- 项目依赖的源码编码及输出编码 UTF-8-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- jdk及maven(*note.001)版本-->
        <jdk.version>1.8</jdk.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <jdk.encoding>UTF-8</jdk.encoding>
        <!-- 代码检查checkstyle 及 bug检索findbugs 版本-->
        <maven.checkstyle.plugin.version>2.17</maven.checkstyle.plugin.version>
        <checkstyle.version>8.12</checkstyle.version>
        <findbugs.maven.plugin.version>3.0.5</findbugs.maven.plugin.version>
        <maven.pmd.plugin.version>3.8</maven.pmd.plugin.version>

        <!-- https://spring.io/projects/spring-boot#learn 官方地址-->
        <!-- 参考文档地址：https://www.cnblogs.com/quanxi/p/7147071.html 入手Spring Boot -->
        <spring.boot.version>2.0.3.RELEASE</spring.boot.version>
        <!-- 跟随spring-boot升级 spring-core：spring框架中最低层核心的模块。提供了最基本的Ioc(*note.002)思想框架-->
        <spring.version>5.0.7.RELEASE</spring.version>
        <!-- 跟随spring-boot升级 logback-core:开源日志组件(*note.003)-->
        <logback.version>1.2.3</logback.version>
        <!-- https://github.com/apache/incubator-dubbo/releases 分布式服务框架-->
        <dubbo.version>2.6.2</dubbo.version>
        <!-- 跟随dubbo升级的 zookeeper -->
        <!-- <zkclient.version>0.10</zkclient.version>-->
        <!-- curator：分布式互斥锁(*note.004) -->
        <curator.version>2.12.0</curator.version>
        <!-- 跟随spring-boot升级 netty-all 异步通信、事件驱动  java网络编程框架 (*note.005)-->
        <netty.version>4.1.25.Final</netty.version>

        <!-- 跟随spring-boot升级 mysql-connector-java：是java通过JDBC连接操作mysql的官方驱动,解压后是jar包,需安装Java环境-->
        <mysql.connector.java.version>5.1.46</mysql.connector.java.version>
        <!-- https://github.com/alibaba/druid/releases 数据库连接池(*note.006)-->
        <druid.version>1.1.10</druid.version>
        <!-- https://gitee.com/baomidou/mybatis-plus/releases  Mybatis的增强工具 -->
        <mybatisplus.version>2.2.0</mybatisplus.version>
        <!-- https://search.maven.org/search?q=g:com.baomidou%20AND%20a:mybatisplus-spring-boot-starter&core=gav -->
        <!-- 为Mybatis-Plus快速集成spring-boot简化配置，补充了MyBatis短板，让 mybatis 兼具了 hibernate 的优点-->
        <mybatisplus-spring-boot-starter.version>1.0.5</mybatisplus-spring-boot-starter.version>

        <!-- (*note.007)1、跟随spring-boot升级 json解析器，jackson-core ，实现基本的序列化和反序列化 -->
        <jackson.version>2.9.6</jackson.version>
        <!-- (*note.007)2、https://search.maven.org/search?q=g:com.alibaba%20AND%20a:fastjson&core=gav -->
        <fastjson.version>1.2.47</fastjson.version>
        <!-- (*note.007)3、跟随spring-boot升级 com.google.code.gson -->
        <gson.version>2.8.5</gson.version>
        <!-- https://search.maven.org/search?q=g:com.github.java-json-tools%20AND%20a:json-schema-validator&core=gav -->
        <!-- 自动校验方面的可用工具包中的json schema 定义、校验、修复json数据格式的解决方案。
        定义了整套规则，允许通过定义一个schema(本身也是JSON)来描述一个JSON串的数据格式。-->
        <json.schema.validator>2.2.10</json.schema.validator>

        <!-- 跟随spring-boot升级 com.github.ben-manes.caffeine;spring5（springboot2）开始用Caffeine缓存取代guava(*note.008)-->
        <caffeine.cache.version>2.6.2</caffeine.cache.version>

        <!-- 跟随spring-boot升级 spring-kafka 开源流处理平台 高吞吐量的分布式发布订阅消息系统 (*note.009) -->
        <spring.kafka.version>2.1.7.RELEASE</spring.kafka.version>

        <!-- 跟随spring-boot升级 org.apache.httpcomponents (HTTP：超文本传输协议)-->
        <!--http.client是Apache Jakarta Common 下的子项目，可以用来提供高效的、最新的、功能丰富的支持 HTTP 协议的客户端编程工具包，
        并且它支持 HTTP 协议最新的版本和建议。-->
        <http.client.version>4.5.5</http.client.version>
        <!-- 跟随spring-boot升级 org.apache.httpcomponents -->
        <!-- 异步，补充包，提供了对基本HTTP协议的健壮支持，基于异步事件驱动I/O模型构建HTTP感知客户端应用程序-->
        <http.async.client.version>4.1.3</http.async.client.version>

        <!-- 跟随spring-boot升级 validation-api 参考文档地址：https://blog.csdn.net/zalan01408980/article/details/79059434-->
        <!-- 开发JAVA服务器端代码，需要对外部传来的参数合法性进行验证。hibernate-validator提供了一些常用的参数校验注解-->
        <validation.api.version>2.0.1.Final</validation.api.version>
        <!-- 跟随spring-boot升级 hibernate-validator -->
        <hibernate.validator.version>6.0.10.Final</hibernate.validator.version>

        <!-- https://search.maven.org/search?q=g:com.google.guava%20AND%20a:guava&core=gav -->
        <!-- 基于开源的Java库，其中包含谷歌正在由他们很多项目使用的很多核心库。为了方便编码，并减少编码错误。
        提供用于集合，缓存，支持原语，并发性，常见注解，字符串处理，I/O和验证的实用方法。-->
        <guava.version>25.1-jre</guava.version>
        <!-- 跟随spring-boot升级 org.apache.commons -->
        <!-- 提供了这些额外的方法来操作其核心类。特别是字符串操作方法、基本数值方法、对象反射、并发性、创建和序列化以及系统属性。
        它还包含对java.util.Date的基本增强，以及一系列专门用于帮助构建方法的实用程序，如hashCode、toString和Equals。-->
        <commons.lang3.version>3.7</commons.lang3.version>
        <!-- https://search.maven.org/search?q=g:commons-io%20AND%20a:commons-io&core=gav
        实用程序库，帮助开发IO(输入/输出)功能-->
        <commons.io.version>2.6</commons.io.version>
        <!-- 跟随spring-boot升级 org.apache.commons 对对象池化操作进行了很好的封装，使我们只需要根据业务需求重写或实现部分接口-->
        <!-- 参考文档地址：https://blog.csdn.net/u011277123/article/details/53943351/-->
        <commons.pool2.version>2.5.0</commons.pool2.version>
        <!-- 跟随spring-boot升级 commons-codec 提供常用编码器和解码器的实现，如base 64、十六进制、Phonetic和URL。-->
        <commons.codec.version>1.11</commons.codec.version>
        <!-- https://search.maven.org/search?q=g:org.apache.commons%20AND%20a:commons-collections4&core=gav -->
        <!-- 包中定义了由其他包实现的接口、作为工厂类(可以实例化集合类或者集合的封装类)的共通类-->
        <!-- 参考文档地址：https://blog.csdn.net/jiutianhe/article/details/19199573 交集、计数、迭代、逻辑和类型强制转换操作等-->
        <commons.collections4.version>4.1</commons.collections4.version>
        <!-- commons.email提供一个发送电子邮件的API。构建在JavaMailAPI之上，简化-->
        <commons.email.version>1.5</commons.email.version>

        <!-- (*note.010)1、http://springfox.github.io/springfox/ Springfox与swagger的整合使用-->
        <springfox.version>2.6.1</springfox.version>
        <!-- (*note.010)2、https://mvnrepository.com/artifact/io.swagger/swagger-annotations @Api、@ApiOperation等注解 -->
        <swagger.annotations.version>1.5.10</swagger.annotations.version>

        <!-- https://search.maven.org/search?q=g:org.apache.velocity%20AND%20a:velocity-engine-core&core=gav -->
        <!-- 基于Java的模板引擎。允许任何人使用模板语言来引用Java代码中定义的对象 参考文档地址：http://velocity.apache.org/-->
        <velocity.version>2.0</velocity.version>

        <!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-core Java安全框架,执行身份验证、授权、密码和会话管理-->
        <shiro.version>1.4.0</shiro.version>
        <!-- https://mvnrepository.com/artifact/org.crazycake/shiro-redis (*note.011) 使用shiro-redis集群 -->
        <shiro.redis.version>2.4.2.1-RELEASE</shiro.redis.version>

        <!-- https://mvnrepository.com/artifact/org.jsoup/jsoup -->
        <!-- jsoup 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。爬虫
        它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。-->
        <jsoup.version>1.11.3</jsoup.version>
        <!-- https://mvnrepository.com/artifact/org.activiti/activiti-spring-boot-starter-basic -->
        <!-- activiti：业务流程管理（BPM）框架，它是覆盖了业务流程管理、工作流、服务协作等领域的一个开源的可执行流程语言框架。-->
        <!-- 参考文档地址：https://blog.csdn.net/zezezuiaiya/article/details/78121663-->
        <!-- 暂时未用到-->
        <activiti.version>5.22.0</activiti.version>
        <!-- https://mvnrepository.com/artifact/cn.afterturn/easypoi-base -->
        <!-- 不懂导入导出也能快速使用poi完成Excel和word的各种操作 参考文档地址：http://easypoi.mydoc.io/#text_186905-->
        <easypoi.version>3.0.3</easypoi.version>
        <!-- https://mvnrepository.com/artifact/org.jdom/jdom 通过 Java 代码来访问、操作并输出 XML 数据 ；Document -->
        <!-- JDOM是一种使用 XML（标准通用标记语言下的一个子集） 的独特 Java 工具包，它的设计包含 Java 语言的语法乃至语义。-->
        <jdom.version>2.0.2</jdom.version>

    </properties>

    <dependencyManagement>
        <dependencies>

            <!-- spring boot import start -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- spring boot import end -->

            <!-- netty start -->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <!-- netty end -->

            <!-- spring start -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <exclusions>
                    <exclusion>
                        <groupId>io.lettuce</groupId>
                        <artifactId>lettuce-core</artifactId>
                    </exclusion>
                </exclusions>
                <version>${spring.boot.version}</version>
            </dependency>

            <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-data-elasticsearch</artifactId>-->
            <!--<version>${spring.boot.version}</version>-->
            <!--</dependency>-->

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-aop</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <!-- spring end -->

            <!-- spring boot start -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-tomcat</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-undertow</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <!--   <dependency>
                   <groupId>org.springframework.boot</groupId>
                   <artifactId>spring-boot-starter-freemarker</artifactId>
                   <version>${spring.boot.version}</version>
               </dependency>-->

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-devtools</artifactId>
                <version>${spring.boot.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring.boot.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>com.github.java-json-tools</groupId>
                <artifactId>json-schema-validator</artifactId>
                <version>${json.schema.validator}</version>
            </dependency>

            <!-- spring boot end -->

            <!-- log start -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <!-- log end -->

            <!-- dubbo start -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>dubbo</artifactId>
                <version>${dubbo.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <!--<exclusion>-->
                    <!--<groupId>org.jboss.netty</groupId>-->
                    <!--<artifactId>*</artifactId>-->
                    <!--</exclusion>-->
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${curator.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!--<dependency>-->
            <!--<groupId>com.101tec</groupId>-->
            <!--<artifactId>zkclient</artifactId>-->
            <!--<version>${zkclient.version}</version>-->
            <!--<exclusions>-->
            <!--<exclusion>-->
            <!--<groupId>org.slf4j</groupId>-->
            <!--<artifactId>*</artifactId>-->
            <!--</exclusion>-->
            <!--<exclusion>-->
            <!--<groupId>log4j</groupId>-->
            <!--<artifactId>*</artifactId>-->
            <!--</exclusion>-->
            <!--<exclusion>-->
            <!--<groupId>io.netty</groupId>-->
            <!--<artifactId>*</artifactId>-->
            <!--</exclusion>-->
            <!--</exclusions>-->
            <!--</dependency>-->
            <!-- dubbo end -->

            <!-- mysql start -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.connector.java.version}</version>
            </dependency>
            <!-- mysql end -->

            <!-- druid start -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!-- druid end -->

            <!-- mybatis-plus start -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus</artifactId>
                <version>${mybatisplus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatisplus-spring-boot-starter</artifactId>
                <version>${mybatisplus-spring-boot-starter.version}</version>
            </dependency>
            <!-- mybatis-plus end -->

            <!-- validation start -->
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${validation.api.version}</version>
            </dependency>

            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate.validator.version}</version>
            </dependency>
            <!-- validation end -->

            <!-- json start-->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <!-- json end-->

            <!-- kafka start -->
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${spring.kafka.version}</version>
            </dependency>
            <!-- kafka end -->

            <!-- http client start -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${http.client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpasyncclient</artifactId>
                <version>${http.async.client.version}</version>
            </dependency>
            <!-- http client end -->

            <!-- utils start -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons.lang3.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>${commons.pool2.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons.collections4.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons.codec.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-email</artifactId>
                <version>${commons.email.version}</version>
            </dependency>
            <!-- utils end -->

            <!-- swagger start -->
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.annotations.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springfox.version}</version>
            </dependency>
            <!-- swagger end -->

            <!-- velocity start -->
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity.version}</version>
            </dependency>
            <!-- velocity end -->

            <!-- shiro spring start -->
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-core</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.crazycake</groupId>
                <artifactId>shiro-redis</artifactId>
                <version>${shiro.redis.version}</version>
            </dependency>
            <!-- shiro spring end -->

            <!-- caffeine cache start -->
            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>${caffeine.cache.version}</version>
            </dependency>
            <!-- caffeine cache end -->

            <!--过滤html组件jsoup start-->
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>
            <!--过滤html组件jsoup end-->

            <!--wsdl的解析 start-->
            <dependency>
                <groupId>org.jdom</groupId>
                <artifactId>jdom</artifactId>
                <version>${jdom.version}</version>
            </dependency>
            <!--wsdl的解析 end-->

            <!-- actviti begin-->
            <dependency>
                <groupId>org.activiti</groupId>
                <artifactId>activiti-spring-boot-starter-basic</artifactId>
                <version>${activiti.version}</version>
            </dependency>
            <dependency>
                <groupId>org.activiti</groupId>
                <artifactId>activiti-spring-boot-starter-actuator</artifactId>
                <version>${activiti.version}</version>
            </dependency>
            <dependency>
                <groupId>org.activiti</groupId>
                <artifactId>activiti-explorer</artifactId>
                <version>${activiti.version}</version>
            </dependency>
            <dependency>
                <groupId>org.activiti</groupId>
                <artifactId>activiti-simple-workflow</artifactId>
                <version>${activiti.version}</version>
            </dependency>
            <dependency>
                <groupId>org.activiti</groupId>
                <artifactId>activiti-modeler</artifactId>
                <version>${activiti.version}</version>
            </dependency>
            <!-- actviti end-->

            <!-- freemarker begin -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-freemarker</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <!-- freemarker end-->

            <!-- easypoi begin -->
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-base</artifactId>
                <version>${easypoi.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-web</artifactId>
                <version>${easypoi.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-annotation</artifactId>
                <version>${easypoi.version}</version>
            </dependency>
            <!-- easypoi end -->

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven.checkstyle.plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${checkstyle.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>com.linewell.zhzf.api-gateway</groupId>
                            <artifactId>build-tools</artifactId>
                            <version>1.0-SNAPSHOT</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>check</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <encoding>UTF-8</encoding>
                                <failsOnError>false</failsOnError>
                                <consoleOutput>true</consoleOutput>
                                <configLocation>checkstyle.xml</configLocation>
                                <logViolationsToConsole>false</logViolationsToConsole>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>${findbugs.maven.plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.linewell.zhzf.api-gateway</groupId>
                            <artifactId>build-tools</artifactId>
                            <version>1.0-SNAPSHOT</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>check</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <effort>default</effort>
                        <failOnError>true</failOnError>
                        <findbugsXmlOutput>false</findbugsXmlOutput>
                        <excludeFilterFile>findbugs-exclude-filter.xml</excludeFilterFile>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${maven.pmd.plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.linewell.zhzf.api-gateway</groupId>
                            <artifactId>build-tools</artifactId>
                            <version>1.0-SNAPSHOT</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>check</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>check</goal>
                                <goal>cpd-check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <printFailingErrors>true</printFailingErrors>
                        <rulesets>
                            <ruleset>pmd.xml</ruleset>
                        </rulesets>
                        <minimumTokens>200</minimumTokens>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                                <goal>build-info</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <profiles>
                            <profile>dev</profile>
                        </profiles>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <repositories>
        <!-- 开发热部署-->
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

</project>